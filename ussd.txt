const express = require('express');

const app = express();
app.use(express.json());
app.use(express.urlencoded({ extended: false }));

app.get("/api/test", function (req, res) {
    res.send("Test Request");
});

app.post('/ussd', (req, res) => {
    // Read the variables sent via POST from our API
    const {
        sessionId,
        serviceCode,
        phoneNumber,
        text,
    } = req.body;

    let response = '';

    if (text == '') {
        // This is the first request. Note how we start the response with CON
        response = `CON What would you like to check
        1. My account
        2. My phone number`;
    } else if ( text == '1') {
        // Business logic for first level response
        response = `CON Choose account information you want to view
        1. Account number`;
    } else if ( text == '2') {
        // Business logic for first level response
        // This is a terminal request. Note how we start the response with END
        response = `END Your phone number is ${phoneNumber}`;
    } else if ( text == '1*1') {
        // This is a second level response where the user selected 1 in the first instance
        const accountNumber = 'ACC100101';
        // This is a terminal request. Note how we start the response with END
        response = `END Your account number is ${accountNumber}`;
    }

    // Send the response back to the API
    res.set('Content-Type: text/plain');
    res.send(response);
});
const PORT = process.env.PORT || 3000

app.listen(PORT, () => {
    console.log(`Server running on port ${PORT}`);
});



else {
                const symptom = inputs[1];
                try {
                    const symptomsData = await getSymptoms();
                    const symptomFound = symptomsData.find(item => item.Name.toLowerCase() === symptom.toLowerCase());

                    if (symptomFound) {
                        response = `END Symptom: ${symptomFound.Name}\nID: ${symptomFound.ID}`;
                    } else {
                        response = `END No data found for the symptom: ${symptom}`;
                    }
                } catch (error) {
                    response = 'END Error retrieving symptom data';
                }
            }